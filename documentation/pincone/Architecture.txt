Architecture



























































































































































Jump to ContentLearnForumSupportSystem StatusContactGuidesAPI ReferenceExamplesLibrariesLearnForumSupportSystem StatusContactLog InSign Up FreeLog InSign Up FreeGuidesAPI ReferenceExamplesLibrariesAIGetting startedOverviewQuickstartExamplesChoosing index type and sizeorganizationsUnderstanding organizationsManaging costUnderstanding costMonitoring your usageManage billingUnderstanding subscription statusChanging your billing planSetting up billing through AWS MarketplaceSetting up billing through GCP MarketplaceprojectsUnderstanding projectsCreate a projectAdd users to projects and organizationsChange project pod limitRename a projectgcp-starter environmentindexesUnderstanding indexesManage indexesScale indexesUnderstanding collectionsBack up indexesUsing namespacesrecordsInsert dataManage dataSparse-dense embeddingsQuery dataFiltering with metadatadatasetsPinecone public datasetsUsing public Pinecone datasetsCreating and loading private datasetsoperationsUnderstanding multitenancyMonitoringPerformance tuningTroubleshootingMoving to productionIntegrationsOpenAICohereHaystackHugging Face Inference EndpointsElasticsearchDatabricksLangChainreferencePython ClientNode.JS ClientLimitsRelease notesLibrariesArchitectureSupportSupport ForumSupport PortalStatusSecurityArchitectureSuggest EditsOverview
This document describes the basic architecture of the Pinecone database.
Basic architecture
The Pinecone vector database is a cloud-based service deployed partly on Kubernetes. Pinecone serves control plane requests from an API gateway and routes these requests to user indexes; clients make data plane requests directly to pods. See Fig. 1 below. 
Figure 1: Pinecone architecture diagram
 
Components

Pods. Each index has one or more replicas, each of which is deployed to a pod with assigned SSD and memory capacity. The CPU assigned to the pod performs computation; the SSD stores metadata.
A stream processor indexes vectors.
The blob store contains persistent snapshots of replica data.

For more information about security and encryption, see Security.Updated 18 days ago Table of Contents
Overview
Basic architecture
Components





Documentation


Learning Center


Developer Forum


Support Center


Status Page


Careers




Â© Pinecone Systems, Inc. | San Francisco, CA | Terms | Privacy | Cookies | Trust & Security | System Status
Pinecone is a registered trademark of Pinecone Systems, Inc.




























































